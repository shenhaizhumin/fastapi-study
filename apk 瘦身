

apk 瘦身：移除无用资源，代码混淆
 1。   release {
        //是否进行混淆
        minifyEnabled true
        // 移除无用的resource文件g
        shrinkResources true
        //混淆规则文件
        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        signingConfig signingConfigs.release
    }

2。压缩图片

    国外的网址：无损压缩
    https://www.tinypng.com/
    缺点：上传任何未发布产品的内容到外部网络，都有可能引起数据泄漏


3。使用Android Lint分析去除无用资源
    Analyze - -> Run Inspection by Name  -->  输入 unused resource   之后敲下回车Android Lint就会开始分析项目中哪里存在着无用资源


4。用极限压缩工具
    使用AndResGuard

    AndResGuard是微信开源出来的一个打包工具

    原理：

    资源（png, xml, jpg等）名称混淆，资源路径名称混淆以及名称长度压缩；

    原来以STORED形式存储到zip中的png文件被改成了DEFLATED（普通压缩存储）方式；

    意外发现resources.arsc, META-INF/*.SF 以及 META-INF/*.MF变小了，而且是解压之后的文件大小也变小了。


5。使用SVG图片格式

用 SVG 的优势在于：

1.SVG 可被非常多的工具读取和修改（比如记事本）,由于使用xml格式定义，所以可以直接被当作文本文件打开，看里面的数据；

2.SVG 与 JPEG 和 GIF 图像比起来，尺寸更小，且可压缩性更强，SVG 图就相当于保存了关键的数据点，比如要显示一个圆，需要知道圆心和半径，那么SVG 就只保存圆心坐标和半径数据，而平常我们用的位图都是以像素点的形式根据图片大小保存对应个数的像素点，因而SVG尺寸更小；

3.SVG 是可伸缩的，平常使用的位图拉伸会发虚，压缩会变形，而SVG格式图片保存数据进行运算展示，不管多大多少，可以不失真显示；

4.SVG 图像可在任何的分辨率下被高质量地打印;

5.SVG 可在图像质量不下降的情况下被放大;

6.SVG 图像中的文本是可选的，同时也是可搜索的（很适合制作地图）;

7.SVG 可以与 Java 技术一起运行;

8.SVG 是开放的标准;

9.SVG 文件是纯粹的 XML;

